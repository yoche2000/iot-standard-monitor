# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test_3.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from mq_recv_client import *
#from mqtt_functions import *
import paho.mqtt.client as mqtt
import time


class Ui_MainWindow(object):
    def __init__(self):
        self.Client_name_2 = 'Server'
        self.Topic_name_2 = '123'
        self.copylist = ''
        #self.port = 1883
        self.mqttBroker = "mqtt.eclipseprojects.io"
        self.a = []
        self.b = []
        self.c = []
        self.host = '183.230.40.96'
        self.port = 8883

        self.access_key = 'MnG4fm6PHioLbp9/TZx8gL8yobG3niM4xJqiUCydesw='  # acckey
        self.namespace = 'cityu_test_only'  # Mqid
        self.topic_name1 = 'w123'  # topic
        self.sub_name1 = 'w222'  # sub

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(348, 417)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 20, 81, 16))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(130, 20, 113, 20))
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 60, 81, 16))
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(130, 60, 113, 20))
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 180, 331, 191))
        self.textBrowser.setObjectName("textBrowser")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(40, 100, 161, 16))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(40, 140, 161, 16))
        self.radioButton_2.setObjectName("radioButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 348, 23))
        self.menubar.setObjectName("menubar")
        self.menusada = QtWidgets.QMenu(self.menubar)
        self.menusada.setObjectName("menusada")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action123 = QtWidgets.QAction(MainWindow)
        self.action123.setObjectName("action123")
        self.actionexit = QtWidgets.QAction(MainWindow)
        self.actionexit.setObjectName("actionexit")
        self.actionsave = QtWidgets.QAction(MainWindow)
        self.actionsave.setObjectName("actionsave")

        self.menubar.addAction(self.menusada.menuAction())

        self.retranslateUi(MainWindow)
        self.lineEdit.returnPressed.connect(self.Input_Received)
        self.lineEdit_2.returnPressed.connect(self.Input_Received)
        self.radioButton.clicked.connect(self.Clicked_Subscribe)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "qt designer test"))
        self.label.setText(_translate("MainWindow", "Server Name:"))
        self.label_2.setText(_translate("MainWindow", "Topic:"))
        self.radioButton.setText(_translate("MainWindow", "Continuous subscription"))
        self.radioButton_2.setText(_translate("MainWindow", "Individual subscription"))
        self.menusada.setTitle(_translate("MainWindow", "Mainpage"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action123.setText(_translate("MainWindow", "123"))
        self.actionexit.setText(_translate("MainWindow", "Exit"))
        self.actionsave.setText(_translate("MainWindow", "save"))

    def Clicked_Subscribe(self):
        mq= MQClient(self.host, self.port, self.namespace, self.access_key, self.topic_name1, self.sub_name1)
        mq.run()
        while True:
            time.sleep(1)
        '''''
        if self.lineEdit.text() != "" and self.lineEdit_2.text() != "":
            self.Client_name_2 = self.lineEdit.text()
            self.Topic_name_2 = self.lineEdit_2.text()

            print("Client name:", self.Client_name_2)
            print("Topic name:", self.Topic_name_2)
            #self.copylist +="Client name:" +str(self.Client_name_2)+ '\n'
           # self.copylist +="Topic name:" +str(self.Topic_name_2)+ '\n'
            #self.copylist +=str("Client name:" + self.Client_name_2 + '\n' + "Topic name:" + self.Topic_name_2 + '\n')
            #self.textBrowser.setText(self.copylist)
            print('copylist0',self.copylist)
            print('2')

            self.textBrowser.setText(
                "Client name:" + self.Client_name_2 + '\n' + "Topic name:" + self.Topic_name_2 + '\n')

            self.pushButton = QtWidgets.QPushButton(self.centralwidget)
            QtWidgets.QMessageBox.information(self.pushButton, "Notice", "Receiving...")

            self.Server =mqtt.Client(self.Client_name_2)
            self.Server.connect(self.mqttBroker, self.port)

            #self.Server.loop_start()

           # self.Server.subscribe(self.Topic_name_2)
            #self.Server.on_message=on_message_callback(client, userdata, message)
            print('123123',self.c)

            print('3')


            time.sleep(10)
            print('123')
            self.Server.loop_stop()
            #p2 = MQTT_FUNCTIONS()
            #p2.Subscribe(self.Client_name_2,self.Topic_name_2)
            #QtWidgets.QMessageBox.information(self.pushButton, "Notice", "Subscription over")
        else:
            QtWidgets.QMessageBox.information(self.pushButton, "Warning", "Please input necessary information")
        '''''

    def on_message(self, client1, userdata, message):
        self.message = str(message.payload.decode("utf-8"))
        self.copylist += self.message
        print(self.message)
        print('copylist1', self.copylist)
        self.textBrowser.setText(str(self.copylist))

        print("received message: ", str(message.payload.decode("utf-8")))

    def Input_Received(self):
        self.Client_name = self.lineEdit.text()
        self.Topic_name = self.lineEdit_2.text()

        QtWidgets.QMessageBox.information(self.pushButton, "Notice", "Publish successfully")


